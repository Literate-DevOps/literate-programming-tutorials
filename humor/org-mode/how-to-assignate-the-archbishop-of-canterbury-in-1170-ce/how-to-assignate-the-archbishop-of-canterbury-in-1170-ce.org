# -*- mode: org; org-confirm-babel-evaluate: nil; org-babel-noweb-wrap-start: "«"; org-babel-noweb-wrap-end: "»"; -*-

#+TITLE: How to Assignate the Archbishop of Canterbury in 1170 CE

* Summary  

This =How-To= tutorial provides a step by step guide on how to assignate the Archbishop of Canterbury in 1170 CE if you are Henry II of England. 

#+BEGIN_QUOTE
*Note:* If you are not Henry II of England, then this tutorial is really about how literate programming can be used enhance understanding by writing and structuring code for a human audience instead of a computer. After you finish this tutorial, you should read the raw code of this document as well to see the full syntax of the literate program. 
#+END_QUOTE

* Setup Instructions

1. Appoint your friendly chancellor as Archbishop of Canterbury in 1162 CE to reassert royal supremancy of English Church[fn:1].

2. When your plan falls apart, get into 10 year pissing match with lots of other historical figures.

3. In 1170 CE
  1. Get really upset when the Archbishop of Canterbury excommunicates a bunch of people you like.
  2. Hold a Christmas party

* Plan Details

** Christmas Party Royal Guest List

The =royal-guest-list-x-mas-1170-ce= table contains the guest list. 

#+NAME: royal-guest-list-x-mas-1170-ce
| Name              | Title  |
|-------------------+--------|
| Hugh de Morville  | Knight |
| Reginald Fitzurse | Knight |
| William de Tracy  | Knight |
| Richard le Breton | Knight |
| Henry II          | King   |

** At the Party, Say this Phrase

#+NAME: plausible-deniability
#+BEGIN_SRC css :noweb yes
  "Will no one rid me of this turbulent priest?" 
#+END_SRC

#+BEGIN_QUOTE
  *Hint:* If the date is after 1170 CE, then let's put this phrase is inside a code block is named =plausible-deniability=.
#+END_QUOTE

** Have Guests Play the Popular =Read between the Lines= Party Game

1. Guess meaning of the words, =Will no one=, using =Christmas Party Royal Guest List= as a clue.

   #+BEGIN_QUOTE
     *Hint:* If the date is after 1170 CE, then use the following =ruby= code block which is named =will_no_one_code=.
   #+END_QUOTE
   
   #+NAME: will_no_one_code
   #+BEGIN_SRC ruby :var guests=royal-guest-list-x-mas-1170-ce
     special_friends = guests.select!{|guest| guest[1] == 'Knight'}.map{|row| [row[0].split(/ /)[0]]}.sort
     [special_friends[0..2].join(', '), special_friends[3]].join(' & ')
   #+END_SRC

2. Guess the meaning of the words, =rid me of=, using the =Christmas Party Royal Guest List= and the following =List of Phrases= as clues.

   The =list-of-phrases= table contains the phrases available to the guests.

   #+NAME: list-of-phrases
   | List of Phrases                             |
   |---------------------------------------------|
   | seize and return to Normandy with           |
   | apologize and give a large sum of money to  |
   | request excommunication be undone by        |
   | use those pointy sharp sticks I gave you on |

   #+BEGIN_QUOTE
     *Hint:* If the date is after 1170 CE, then use the following =ruby= code block which is named =rid_me_of_code=.
   #+END_QUOTE

   #+NAME: rid_me_of_code
   #+BEGIN_SRC ruby :var guests=royal-guest-list-x-mas-1170-ce :var list_of_phrases=list-of-phrases
     list_of_phrases[guests.select!{|guest| not guest[1] == 'King'}.map{|row| [row[0].split(/ /)[0]]}.count - 1].join(' ')
   #+END_SRC

3. Guess the meaning of the words, =this turbulent priest?=, using the =Christmas Party Royal Guest List= and the following =Famous Religious Personages= as clues.
   
   The =favorite-religious-personages= table contains a list of famous religious personages for the party game.
   
   #+NAME: favorite-religious-personages
   | Famous Religious Personages                 |
   |---------------------------------------------|
   | God                                         |
   | Jesus                                       |
   | Holy Ghost                                  |
   | Thomas Becket, the Archbishop of Canterbury |

   #+BEGIN_QUOTE
     *Hint:* If the date is after 1170 CE, then use the following =ruby= code block which is named =this_turbulent_priest?_code=.
   #+END_QUOTE

   #+NAME: this_turbulent_priest?_code
   #+BEGIN_SRC ruby :var guests=royal-guest-list-x-mas-1170-ce :var favorite_religious_personages=favorite-religious-personages
     favorite_religious_personages[guests.select!{|guest| guest[1] == 'King'}.map{|row| [row[0].split(/ /)[0]]}.count + 2].join(' ')
   #+END_SRC

4. Have Guests Leave the Christmas Party and Return with Correct Answer the Next Day.

5. Reward Everyone that Guessed the /Correct/ Answer to =Read between the Lines= Game.

** To see the /correct/ answer let's use the following Literate Program.

   #+BEGIN_QUOTE
     *Sneaky Surprise:* This entire tutorial file is the literate program, not just this section.
   #+END_QUOTE

1. Encode What the King Said as Literate Program[fn:2]

   - The following =ruby= code block which is named =what_the_king_said=. The ~the_king_said~ variable value is set to the output of the =plausible-deniability= code block. 

     #+NAME: what_the_king_said
     #+BEGIN_SRC ruby :var the_king_said=plausible-deniability :wrap "SRC css :noweb yes" :exports both 
     the_king_said.downcase!
     the_king_said.gsub!(/(will no one)/i,'«\1»')
     the_king_said.gsub!(/(rid me of)/i,'«\1»')
     the_king_said.gsub!(/(this turbulent priest[?])/i,'«\1»')
     the_king_said.gsub!(/([^«»]) /, '\1_')
     the_king_said
     #+END_SRC
 
   - The following code block named =will_no_one=, will execute the =will_no_one_code= =ruby= code.

     #+NAME: will_no_one
     #+BEGIN_SRC css :noweb yes :exports code 
     «will_no_one_code()»
     #+END_SRC
 
   - The following code block named =rid_me_of=, will execute the =rid_me_of_code= =ruby= code.

     #+NAME: rid_me_of
     #+BEGIN_SRC css :noweb yes :exports code 
     «rid_me_of_code()»
     #+END_SRC

   - The following code block named =this_turbulent_priest?=, will execute the =this_turbulent_priest?_code= =ruby= code.

     #+NAME: this_turbulent_priest?
     #+BEGIN_SRC css :noweb yes :exports code 
     «this_turbulent_priest?_code()»
     #+END_SRC

2. Translate *What the King Said* into *What the King Wanted*
     
   - The following code block will execute the =what_the_king_said= =ruby= code.

     #+begin_SRC css :noweb yes :exports both
     «what_the_king_said()»
     #+end_SRC

   - The following code block renames the results of the =what_the_king_said= =ruby= code to a new code block named =what_the_king_wanted=.

     #+NAME: what_the_king_wanted
     #+RESULTS: what_the_king_said
     #+begin_SRC css :noweb yes
       «will_no_one» «rid_me_of» «this_turbulent_priest?»
     #+end_SRC

3. Now we can learn *What the King Wanted*.

   - The following code block is named =the_correct_answer= and executes the code block named =what_the_king_wanted=.
     
     #+name: the_correct_answer
     #+BEGIN_SRC css :noweb yes :exports both 
       «what_the_king_wanted()»
     #+END_SRC

     Below are the results from the =the_correct_answer= code block.

     #+RESULTS: the_correct_answer
     : Hugh, Reginald, Richard & William use those pointy sharp sticks I gave you on Thomas Becket, the Archbishop of Canterbury


* Common Export Settings                                           :noexport:

#+OPTIONS: ':nil *:t -:t ::t <:nil H:4 \n:nil ^:{} arch:headline
#+OPTIONS: author:nil broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:nil e:t email:nil f:t inline:t num:nil
#+OPTIONS: p:nil pri:nil prop:t stat:nil tags:t tasks:nil tex:t
#+OPTIONS: timestamp:nil title:nil toc:nil todo:nil |:t
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport nolatex

# For Display when file is exported with org-ruby 

#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport

* Footnotes

[fn:1] https://en.wikipedia.org/wiki/Becket_controversy

[fn:2] 'Write ten page of prose unrelated. Somewhere in footnotes "Oh by the way, we killed the priest"', Twitter post by @Di4na0 on 2019-06-08
